<UserControl x:Class="Project.Modules.GlueLocator.Views.GrabLocatorMonitorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Project.Modules.GlueLocator.Views"
             xmlns:controls="clr-namespace:Base.Client.Controls;assembly=Base.Client.Controls"
             xmlns:Hcontrols="clr-namespace:HVisionLibs.Shared.Controls;assembly=HVisionLibs.Shared"        
             xmlns:xcd="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
              >

    <UserControl.Resources>
        <ResourceDictionary>
            <FontFamily x:Key="Iconfont">pack://application:,,,/Base.Client.Assets;component/Fonts/Iconfont.ttf#Iconfont</FontFamily>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Base.Client.Controls;component/LogControl/LogListBoxStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Base.Client.Assets;component/Styles/BaseResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/HVisionLibs.Shared;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--Menu 0,0 0,1-->
        <Menu Grid.Row="0" Grid.ColumnSpan="2">
            <MenuItem Header="文件">
                <MenuItem Header="新建" Command="{Binding NewCommand}"/>
                <MenuItem Header="打开" Command="{Binding OpenCommand}"/>
                <MenuItem Header="退出" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="编辑">
                <MenuItem Header="撤销" Command="{Binding UndoCommand}"/>
                <MenuItem Header="重做" Command="{Binding RedoCommand}"/>
            </MenuItem>
            <MenuItem Header="调试">
                <MenuItem Header="相机采集" Command="{Binding CaptureImageCommand}"/>
                <MenuItem Header="保存图片" Command="{Binding SaveImageCommand}"/>
                <MenuItem Header="加载图片" Command="{Binding LoadImageCommand}"/>
                <MenuItem Header="加载模板" Command="{Binding LoadModeCommand}"/>
                <MenuItem Header="运行" Command="{Binding RunCommand}"/>
            </MenuItem>
        </Menu>
        <!--Image 1,0-->
        <GroupBox Grid.Row="1" Header="图像" Margin="5">
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Hcontrols:ImageEditView 
                    Image="{Binding Image}"
                    HWindow="{Binding Service.HWindow,Mode=TwoWay}"
                    DrawObjectList="{Binding DrawObjectList}" />
                <TextBlock Grid.Row="2"
              Margin="5"
              Text="{Binding HResult.Message}" />
            </Grid>
        </GroupBox>
        <!--Resault-->
        <GroupBox Grid.Row="2" Header="结果" Margin="5">
            <DataGrid Grid.Row="1"
          AutoGenerateColumns="False"
          CanUserAddRows="False"
          ColumnWidth="Auto"
          IsReadOnly="True"
          ItemsSource="{Binding RunResaults}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="序号" Binding="{Binding Index}" />
                    <DataGridTextColumn Header="中点坐标X" Binding="{Binding Row}" />
                    <DataGridTextColumn Header="中点坐标Y" Binding="{Binding Column}" />
                    <DataGridTextColumn Header="角度" Binding="{Binding Angle}" />
                    <DataGridTextColumn Header="分数" Binding="{Binding Score}" />
                    <DataGridTextColumn Header="RobotX" Binding="{Binding RobotX}" />
                    <DataGridTextColumn Header="RobotY" Binding="{Binding RobotY}" />
                    <DataGridTextColumn Header="Robot角度" Binding="{Binding RobotAngle}" />
                </DataGrid.Columns>
            </DataGrid>

        </GroupBox>
        <!--Log-->
        <GroupBox Grid.Row="2" Grid.Column="1" Margin="5"
                  Header="系统日志">
            <controls:LogListBox LogMessages="{Binding runLogBLL.Logs}" FontFamily="{StaticResource Iconfont}"/>
        </GroupBox>
        <!--设备状态-->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" TextBlock.FontSize="12" Margin="10,0"
         Grid.Row="3" Grid.ColumnSpan="2" VerticalAlignment="Center">
            <TextBlock Text="设备状态：" VerticalAlignment="Center" Foreground="#888"/>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0">
                <TextBlock Text="PLC" Foreground="#888"/>
                <TextBlock Text="{Binding ConnectionStatus}" Margin="5,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <!-- 默认颜色，可以设置为任意值，例如灰色 -->
                            <Setter Property="Foreground" Value="Gray"/>
                            <Style.Triggers>
                                <!-- 当 ConnectionStatus 等于 "连接正常" 时，将颜色设置为绿色 -->
                                <DataTrigger Binding="{Binding WeightConnectionStatus}" Value="连接正常">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <!-- 当 ConnectionStatus 等于 "已断开" 时，将颜色设置为红色 -->
                                <DataTrigger Binding="{Binding WeightConnectionStatus}" Value="已断开">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock Foreground="#888">
                    <Run Text="当前模板路径:"/>
                    <Run Text="{Binding CurrentModePath}"/>
                </TextBlock>
            
            </StackPanel>
          
            <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center"  Margin="5,0">
          <TextBlock Text="相机" Foreground="#888"/>
          <TextBlock Text="{Binding CamConnectionStatus}" Margin="5,0">
              <TextBlock.Style>
                  <Style TargetType="TextBlock">
                      -->
            <!-- 默认颜色，可以设置为任意值，例如灰色 -->
            <!--
                      <Setter Property="Foreground" Value="Gray"/>
                      <Style.Triggers>
                          -->
            <!-- 当 ConnectionStatus 等于 "连接正常" 时，将颜色设置为绿色 -->
            <!--
                          <DataTrigger Binding="{Binding CamConnectionStatus}" Value="连接正常">
                              <Setter Property="Foreground" Value="Green"/>
                          </DataTrigger>
                          -->
            <!-- 当 ConnectionStatus 等于 "已断开" 时，将颜色设置为红色 -->
            <!--
                          <DataTrigger Binding="{Binding ScanConnectionStatus}" Value="已断开">
                              <Setter Property="Foreground" Value="Red"/>
                          </DataTrigger>
                      </Style.Triggers>
                  </Style>
              </TextBlock.Style>
          </TextBlock>
      </StackPanel>-->

        </StackPanel>

        <!---->
        <TabControl Grid.Row="1" Grid.Column="1" 
                    Style="{StaticResource NormalTabControlStyle}">
            <TabItem Header="通用配置">
                <xcd:PropertyGrid 
                    Foreground="Black"       
                 
                    IsReadOnly="{Binding LogGridIsReadOnly}"
                    SelectedObject="{Binding CommonConfig}">
                    <ContextMenuService.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{Binding LogGridStatus}" Command="{Binding OnSeT_CommonConfigStatusCommand}"/>
                            <MenuItem Header="Save" Command="{Binding OnSaveCommonConfigStatusCommand}"/>
                        </ContextMenu>
                    </ContextMenuService.ContextMenu>

                </xcd:PropertyGrid>

            </TabItem>

            <TabItem Header="当前产品配置" Height="30" VerticalAlignment="Top">
                <xcd:PropertyGrid 
                    Foreground="Black"       
                    IsReadOnly="{Binding LogGridIsReadOnly2}"
                    SelectedObject="{Binding ProductConfig}">
                    <ContextMenuService.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{Binding LogGridStatus2}" Command="{Binding OnSeT_ProductConfigStatusCommand}"/>
                            <MenuItem Header="Save" Command="{Binding OnSaveProductConfigStatusCommand}"/>
                        </ContextMenu>
                    </ContextMenuService.ContextMenu>

                </xcd:PropertyGrid>

            </TabItem>
        </TabControl>

        
    </Grid>
</UserControl>
